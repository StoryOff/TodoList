{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","checked","type","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","loader","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9fde73f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n\r\n    const { removeTodo } = useContext(Context)\r\n    const classes = []\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n    return (\r\n    <li style={styles.li}>\r\n        <span className={classes.join(' ')}>\r\n            <input checked={todo.completed} type=\"checkbox\" style={styles.input} onChange={() => onChange(todo.id)}/>\r\n            <strong>{ index + 1 }</strong>\r\n            &nbsp;\r\n            {todo.title}\r\n        </span>\r\n\r\n        <button onClick={removeTodo.bind(null, todo.id)} className='rm'>&times;</button>\r\n    </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return(\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo, index) => {\r\n                return <TodoItem  \r\n                todo={todo} \r\n                key={todo.id} \r\n                index = {index} \r\n                onChange={props.onToggle}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\nconst loader = () => <div style={{display: 'flex', justifyContent: 'center', margin: '.5rem'}}>\r\n    <div className=\"lds-dual-ring\" />\r\n</div>\r\n\r\nexport default loader","import React from 'react'\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({isOpen: true})}>Open modal</button>\r\n\r\n                {this.state.isOpen && (\r\n                    <div className ='modal'>\r\n                        <div className='modal-body'>\r\n                            <h1>Modal title</h1>\r\n                            <p>I am awesome modal!</p>\r\n                            <button onClick={() => this.setState({isOpen: false})}>Close modal</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import TodoList from './Todo/TodoList'\nimport React, {useEffect} from 'react'\nimport Context from './context'\nimport Loader from './Loader'\nimport Modal from './Modal/Modal'\n\nconst AddTodo = React.lazy(() => import('./Todo/AddTodo'))\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n          setTodos(todos)\n          setLoading(false)\n      })\n  }, [])\n\n  function toggleTodo(id) {\n    setTodos( \n      todos.map(todo => {\n        if (todo.id === id) {\n         todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]))\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className = 'wrapper'>\n        <h1>Todo List</h1>\n        <Modal />\n        <React.Suspense fallback={<p>Loading...</p>}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n\n        {loading && <Loader/>}\n        {todos.length ? <TodoList todos={ todos } onToggle={toggleTodo}/> : loading? null : <p>Todo List Empty!</p>}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}